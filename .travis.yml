language: generic
sudo: required

matrix:
    include:
        - os: osx
          env: SH=bash SH_VERSION=buildin CONTAINER=none
        - os: linux
          env: SH=bash SH_VERSION=3.2 CONTAINER=none
        - os: linux
          env: SH=bash SH_VERSION=4.0 CONTAINER=none
        - os: linux
          env: SH=bash SH_VERSION=4.1 CONTAINER=none
        - os: linux
          env: SH=bash SH_VERSION=4.2 CONTAINER=none
        - os: linux
          env: SH=bash SH_VERSION=4.3 CONTAINER=none
        - os: linux
          env: SH=bash SH_VERSION=4.4 CONTAINER=none
        # ------------------------------------------------
        # Out of support (Test failed due to SSL issue)
        # ------------------------------------------------
        # - os: linux
        #   services: docker
        #   env: SH=bash SH_VERSION=buildin CONTAINER=centos:centos5
        # - os: linux
        #   services: docker
        #   env: SH=bash SH_VERSION=buildin CONTAINER=centos:centos5.11
        - os: linux
          services: docker
          env: SH=bash SH_VERSION=buildin CONTAINER=centos:centos6
        - os: linux
          services: docker
          env: SH=bash SH_VERSION=buildin CONTAINER=centos:centos6.6
        - os: linux
          services: docker
          env: SH=bash SH_VERSION=buildin CONTAINER=centos:centos6.7
        - os: linux
          services: docker
          env: SH=bash SH_VERSION=buildin CONTAINER=centos:centos6.8
        - os: linux
          services: docker
          env: SH=bash SH_VERSION=buildin CONTAINER=centos:centos7.0.1406
        - os: linux
          services: docker
          env: SH=bash SH_VERSION=buildin CONTAINER=centos:centos7.1.1503
        - os: linux
          services: docker
          env: SH=bash SH_VERSION=buildin CONTAINER=centos:centos7.2.1511
        - os: linux
          services: docker
          env: SH=bash SH_VERSION=buildin CONTAINER=centos:centos7.3.1611
        - os: linux
          services: docker
          env: SH=bash SH_VERSION=buildin CONTAINER=centos:latest
        - os: linux
          services: docker
          env: SH=bash SH_VERSION=buildin CONTAINER=ubuntu:12.04
        - os: linux
          services: docker
          env: SH=bash SH_VERSION=buildin CONTAINER=ubuntu:14.04
        - os: linux
          services: docker
          env: SH=bash SH_VERSION=buildin CONTAINER=ubuntu:16.04
        - os: linux
          services: docker
          env: SH=bash SH_VERSION=buildin CONTAINER=ubuntu:16.10
        - os: linux
          services: docker
          env: SH=bash SH_VERSION=buildin CONTAINER=ubuntu:17.04
        - os: linux
          services: docker
          env: SH=bash SH_VERSION=buildin CONTAINER=ubuntu:latest

before_install:
  - if [[ "$TRAVIS_OS_NAME" == "linux"                      ]] ; then sudo apt-get -qq update        ; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" && ! $(which $SH)    ]] ; then sudo apt-get install -y $SH    ; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" && ! $(which nc)     ]] ; then sudo apt-get install -y netcat ; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" && ! $(which expect) ]] ; then sudo apt-get install -y expect ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx"                        ]] ; then brew update                    ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx"   && ! $(which $SH)    ]] ; then brew install $SH               ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx"   && ! $(which nc)     ]] ; then brew install netcat            ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx"   && ! $(which expect) ]] ; then brew install expect            ; fi

before_script:
  - export TMPDIR=$TRAVIS_BUILD_DIR/tmp # Default TMPDIR is not writable on Travis CI
  - mkdir -p $TMPDIR
    # Install bash with specific version
  - if [[ "$SH" == "bash" && "$SH_VERSION" != "buildin" ]];then (cd "$TMPDIR" && curl "http://ftp.gnu.org/gnu/bash/bash-${SH_VERSION}.tar.gz" | tar xvz && cd bash* && ./configure; make && sudo make install && sudo mv /bin/bash /bin/bash.old && sudo cp ./bash /bin/bash ) ;fi

script:
    # Run test on docker container.
  - if [[ "$CONTAINER" != "none" ]] ; then CONTAINER_OS=${CONTAINER%%:*} CONTAINER_TAG=${CONTAINER##*:} $SH ./test/test-docker.sh ;fi
    # Run test on native environment.
  - if [[ "$CONTAINER" == "none" ]] ; then $SH ./test/test.sh ;fi

matrix:
  include:
  - name: "MySQL SQL server, Apache web server and Dovecot mail server"
    env: CFG_SQLSERVER="MySQL" CFG_MYSQL_ROOT_PWD="password" CFG_WEBSERVER="Apache" CFG_PHPMYADMIN="no" CFG_MTA="Dovecot" CFG_HHVMINSTALL="no" CFG_METRONOME="yes" CFG_AVUPDATE="yes" CFG_QUOTA="yes" CFG_ISPC="standard" CFG_JKIT="yes" CFG_WEBMAIL="squirrelmail" SSL_COUNTRY="IT" SSL_STATE="Turkey" SSL_LOCALITY="Sivas" SSL_ORGANIZATION="Servisys di Temporini Matteo" SSL_ORGUNIT="IT department"
  - name: "MySQL SQL server, Apache web server and Courier mail server"
    env: CFG_SQLSERVER="MySQL" CFG_MYSQL_ROOT_PWD="password" CFG_WEBSERVER="Apache" CFG_PHPMYADMIN="no" CFG_MTA="Courier" CFG_HHVMINSTALL="no" CFG_METRONOME="yes" CFG_AVUPDATE="yes" CFG_QUOTA="yes" CFG_ISPC="standard" CFG_JKIT="yes" CFG_WEBMAIL="squirrelmail" SSL_COUNTRY="IT" SSL_STATE="Turkey" SSL_LOCALITY="Sivas" SSL_ORGANIZATION="Servisys di Temporini Matteo" SSL_ORGUNIT="IT department"
  - name: "MySQL SQL server, nginx web server and Dovecot mail server"
    env: CFG_SQLSERVER="MySQL" CFG_MYSQL_ROOT_PWD="password" CFG_WEBSERVER="nginx" CFG_PHPMYADMIN="no" CFG_MTA="Dovecot" CFG_HHVMINSTALL="no" CFG_METRONOME="yes" CFG_AVUPDATE="yes" CFG_QUOTA="yes" CFG_ISPC="standard" CFG_JKIT="yes" CFG_WEBMAIL="squirrelmail" SSL_COUNTRY="IT" SSL_STATE="Turkey" SSL_LOCALITY="Sivas" SSL_ORGANIZATION="Servisys di Temporini Matteo" SSL_ORGUNIT="IT department"
  - name: "MySQL SQL server, nginx web server and Courier mail server"
    env: CFG_SQLSERVER="MySQL" CFG_MYSQL_ROOT_PWD="password" CFG_WEBSERVER="nginx" CFG_PHPMYADMIN="no" CFG_MTA="Courier" CFG_HHVMINSTALL="no" CFG_METRONOME="yes" CFG_AVUPDATE="yes" CFG_QUOTA="yes" CFG_ISPC="standard" CFG_JKIT="yes" CFG_WEBMAIL="squirrelmail" SSL_COUNTRY="IT" SSL_STATE="Turkey" SSL_LOCALITY="Sivas" SSL_ORGANIZATION="Servisys di Temporini Matteo" SSL_ORGUNIT="IT department"
  - name: "MariaDB SQL server, Apache web server and Dovecot mail server"
    env: CFG_SQLSERVER="MariaDB" CFG_MYSQL_ROOT_PWD="password" CFG_WEBSERVER="Apache" CFG_PHPMYADMIN="no" CFG_MTA="Dovecot" CFG_HHVMINSTALL="no" CFG_METRONOME="yes" CFG_AVUPDATE="yes" CFG_QUOTA="yes" CFG_ISPC="standard" CFG_JKIT="yes" CFG_WEBMAIL="squirrelmail" SSL_COUNTRY="IT" SSL_STATE="Turkey" SSL_LOCALITY="Sivas" SSL_ORGANIZATION="Servisys di Temporini Matteo" SSL_ORGUNIT="IT department"
  - name: "MariaDB SQL server, Apache web server and Courier mail server"
    env: CFG_SQLSERVER="MariaDB" CFG_MYSQL_ROOT_PWD="password" CFG_WEBSERVER="Apache" CFG_PHPMYADMIN="no" CFG_MTA="Courier" CFG_HHVMINSTALL="no" CFG_METRONOME="yes" CFG_AVUPDATE="yes" CFG_QUOTA="yes" CFG_ISPC="standard" CFG_JKIT="yes" CFG_WEBMAIL="squirrelmail" SSL_COUNTRY="IT" SSL_STATE="Turkey" SSL_LOCALITY="Sivas" SSL_ORGANIZATION="Servisys di Temporini Matteo" SSL_ORGUNIT="IT department"
  - name: "MariaDB SQL server, nginx web server and Dovecot mail server"
    env: CFG_SQLSERVER="MariaDB" CFG_MYSQL_ROOT_PWD="password" CFG_WEBSERVER="nginx" CFG_PHPMYADMIN="no" CFG_MTA="Dovecot" CFG_HHVMINSTALL="no" CFG_METRONOME="yes" CFG_AVUPDATE="yes" CFG_QUOTA="yes" CFG_ISPC="standard" CFG_JKIT="yes" CFG_WEBMAIL="squirrelmail" SSL_COUNTRY="IT" SSL_STATE="Turkey" SSL_LOCALITY="Sivas" SSL_ORGANIZATION="Servisys di Temporini Matteo" SSL_ORGUNIT="IT department"
  - name: "MariaDB SQL server, nginx web server and Courier mail server"
    env: CFG_SQLSERVER="MariaDB" CFG_MYSQL_ROOT_PWD="password" CFG_WEBSERVER="nginx" CFG_PHPMYADMIN="no" CFG_MTA="Courier" CFG_HHVMINSTALL="no" CFG_METRONOME="yes" CFG_AVUPDATE="yes" CFG_QUOTA="yes" CFG_ISPC="standard" CFG_JKIT="yes" CFG_WEBMAIL="squirrelmail" SSL_COUNTRY="IT" SSL_STATE="Turkey" SSL_LOCALITY="Sivas" SSL_ORGANIZATION="Servisys di Temporini Matteo" SSL_ORGUNIT="IT department"

before_script:
    - sudo sed -i "s/^127.0.1.1.*/127.0.1.1\t$HOSTNAME.example.com\t$HOSTNAME/" /etc/hosts
    - cat /etc/fstab
    #- sudo apt-get -yqq update
    #- sudo apt-get -yqq dist-upgrade
    #- sudo apt-get -yqq install systemd
    - echo "y" | sudo bash install.sh
    - curl -IkL "https://$HOSTNAME:8080"
    - bash -c 'shopt -s globstar; shellcheck -s bash **/*.sh'

after_script:
    - cat /etc/fstab

after_failure:
    - cat /var/log/ispconfig_setup.log
    - cat /var/log/ispconfig_install.log
